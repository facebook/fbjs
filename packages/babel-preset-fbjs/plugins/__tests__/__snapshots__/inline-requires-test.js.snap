// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`inline-requires delete unused requires: delete unused requires 1`] = `
"
var foo = require(\\"foo\\");

      ↓ ↓ ↓ ↓ ↓ ↓


"
`;

exports[`inline-requires ignores require properties (as identifiers) that are re-assigned: ignores require properties (as identifiers) that are re-assigned 1`] = `
"
var X = require(\\"X\\");
var origA = X.a
X.a = function() {
  origA();
};

      ↓ ↓ ↓ ↓ ↓ ↓

var origA = require(\\"X\\").a;
require(\\"X\\").a = function () {
  origA();
};
"
`;

exports[`inline-requires ignores require properties (as strings) that are re-assigned: ignores require properties (as strings) that are re-assigned 1`] = `
"
var X = require(\\"X\\");
var origA = X[\\"a\\"]
X[\\"a\\"] = function() {
  origA();
};

      ↓ ↓ ↓ ↓ ↓ ↓

var origA = require(\\"X\\")[\\"a\\"];
require(\\"X\\")[\\"a\\"] = function () {
  origA();
};
"
`;

exports[`inline-requires inlines any number of variable declarations: inlines any number of variable declarations 1`] = `
"
var foo = require(\\"foo\\"), bar = require(\\"bar\\"), baz = 4;
foo.method()

      ↓ ↓ ↓ ↓ ↓ ↓

var baz = 4;
require(\\"foo\\").method();
"
`;

exports[`inline-requires inlines functions provided via \`inlineableCalls\`: inlines functions provided via \`inlineableCalls\` 1`] = `
"
const inlinedCustom = customStuff(\\"foo\\");
const inlinedRequire = require(\\"bar\\");

inlinedCustom();
inlinedRequire();

      ↓ ↓ ↓ ↓ ↓ ↓

customStuff(\\"foo\\")();
require(\\"bar\\")();
"
`;

exports[`inline-requires inlines multiple usages: inlines multiple usages 1`] = `
"
var foo = require(\\"foo\\");
foo.bar()
foo.baz()

      ↓ ↓ ↓ ↓ ↓ ↓

require(\\"foo\\").bar();
require(\\"foo\\").baz();
"
`;

exports[`inline-requires inlines require properties: inlines require properties 1`] = `
"
var tmp = require(\\"./a\\");
var a = tmp.a
var D = {
  b: function(c) { c ? a(c.toString()) : a(\\"No c!\\"); },
};

      ↓ ↓ ↓ ↓ ↓ ↓

var D = {
  b: function (c) {
    c ? require(\\"./a\\").a(c.toString()) : require(\\"./a\\").a(\\"No c!\\");
  }
};
"
`;

exports[`inline-requires inlines require.resolve calls: inlines require.resolve calls 1`] = `
"
const a = require(require.resolve(\\"Foo\\")).bar;

a();

      ↓ ↓ ↓ ↓ ↓ ↓

require(require.resolve(\\"Foo\\")).bar();
"
`;

exports[`inline-requires inlines requires that are referenced before the require statement: inlines requires that are referenced before the require statement 1`] = `
"
function foo() {
  bar();
}
var bar = require(\\"baz\\");
foo();
bar();

      ↓ ↓ ↓ ↓ ↓ ↓

function foo() {
  require(\\"baz\\")();
}

foo();
require(\\"baz\\")();
"
`;

exports[`inline-requires inlines single usage: inlines single usage 1`] = `
"
var foo = require(\\"foo\\");
foo.bar()

      ↓ ↓ ↓ ↓ ↓ ↓

require(\\"foo\\").bar();
"
`;

exports[`inline-requires inlines with multiple arguments: inlines with multiple arguments 1`] = `
"
const a = require(\\"Foo\\", \\"Bar\\", 47);

a();

      ↓ ↓ ↓ ↓ ↓ ↓

require(\\"Foo\\", \\"Bar\\", 47)();
"
`;
